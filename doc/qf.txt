*qf.txt*	A plugin to make working with the quickfix list/window smoother.


                  VIM-QF DOCUMENTATION by Romain Lafourcade


Help on using vim-qf                                                *qf* *vim-qf*

    1. Introduction ............................... |qf-intro|
    2. Installation ............................... |qf-installation|
    3. Configuration .............................. |qf-configuration|
    4. Usage ...................................... |qf-usage|
    5. Named lists ................................ |qf-named-lists|
    6. Acknowledgements ........................... |qf-acknowledgements|
    7. TODO ....................................... |qf-todo|
    8. DONE ....................................... |qf-done|

==============================================================================
 1. INTRODUCTION                                                     *qf-intro*

vim-qf--short for "vim-quickfix"--is a small collection of settings,
commands and mappings put together to make working with the location/quickfix
list/window smoother.

These "global" features are available from any window:

    - quickfix buffers are hidden from |:ls| and buffer navigation
    - quit Vim if the last window is a location/quickfix window
    - close the location window automatically when quitting parent window
    - set height of location/quickfix windows automatically to the number of
      list items if less than the default height (10)
    - (optional) mappings for |:cnext|, |:cprevious|, |:lnext|, |:lprevious|
      that wrap around the beginning and end of the list
    - (optional) mapping for jumping to and from the location/quickfix window,
    - (optional) mappings for toggling location/quickfix windows
    - (optional) open the location/quickfix window automatically after |:make|,
      |:grep|, |:lvimgrep| and friends if there are valid locations/errors

These "local" features are only available in location/quickfix windows:

    - disable soft-wrapping
    - disable relative numbers
    - filter and restore the current list
    - perform commands on each line in the current list
    - perform commands on each file in the current list
    - jump to next group of entries belonging to same file ("file grouping")
    - save and load named lists
    - (optional) Ack.vim-inspired mappings

==============================================================================
 2. INSTALLATION                                              *qf-installation*

Use your favorite plugin manager or dump the files below in their
standard location:

on Unix-like systems... >

    ~/.vim/after/ftplugin/qf.vim
    ~/.vim/autoload/qf.vim
    ~/.vim/doc/qf.txt
    ~/.vim/plugin/qf.vim
<
on Windows... >

    %userprofile%\vimfiles\after\ftplugin\qf.vim
    %userprofile%\vimfiles\autoload\qf.vim
    %userprofile%\vimfiles\doc\qf.txt
    %userprofile%\vimfiles\plugin\qf.vim
<
If you go with the manual method, don't forget to execute the following
command to make the documentation globally available:

on Unix-like systems... >

    :helptags ~/.vim/doc
<
on Windows... >

    :helptags %userprofile%\vimfiles\doc
<
==============================================================================
 3. CONFIGURATION                                            *qf-configuration*

Global mappings:

    <Plug>QfCprevious ............................. |QfCprevious|
    <Plug>QfCnext ................................. |QfCnext|
    <Plug>QfLprevious ............................. |QfLprevious|
    <Plug>QfLnext ................................. |QfLnext|
    <Plug>QfSwitch ................................ |QfSwitch|
    <Plug>QfCtoggle ............................... |QfCtoggle|
    <Plug>QfLtoggle ............................... |QfLtoggle|

Local mappings:

    { ............................................. |QfPreviousFile|
    } ............................................. |QfNextFile|

Options:

    qf_mapping_ack_style .......................... |qf_mapping_ack_style|
    qf_statusline ................................. |qf_statusline|
    qf_window_bottom .............................. |qf_window_bottom|
    qf_loclist_window_bottom ...................... |qf_loclist_window_bottom|
    qf_auto_open_quickfix ......................... |qf_auto_open_quickfix|
    qf_auto_open_loclist .......................... |qf_auto_open_loclist|
    qf_window_height .............................. |qf_window_height|

------------------------------------------------------------------------------
                                                                  *QfCprevious*
                                                                      *QfCnext*
Scope: global                                                                 ~
Default: none                                                                ~

Go up and down the quickfix list and wrap around.

Example: >

    nmap <Home> <Plug>QfCprevious
    nmap <End>  <Plug>QfCnext
<
------------------------------------------------------------------------------
                                                                  *QfLprevious*
                                                                      *QfLnext*
Scope: global                                                                 ~
Default: none                                                                ~

Go up and down the current location list and wrap around.

Example: >

    nmap <C-Home> <Plug>QfLprevious
    nmap <C-End>  <Plug>QfLnext
<
------------------------------------------------------------------------------
                                                                     *QfSwitch*
Scope: global                                                                 ~
Default: none                                                                ~

Jump to and from the location/quickfix window.

Example: >

    nmap รง <Plug>QfSwitch
<
------------------------------------------------------------------------------
                                                                    *QfCtoggle*
Scope: global                                                                 ~
Default: none                                                                ~

Toggle the quickfix window. Uses |:cwindow| and |:cclose| under the hood.

Example: >

    nmap <F5> <Plug>QfCtoggle
<
------------------------------------------------------------------------------
                                                                    *QfLtoggle*
Scope: global                                                                 ~
Default: none                                                                ~

Toggle the current window's location window or the current location window.
Uses |:lwindow| and |:lclose| under the hood.

Example: >

    nmap <F6> <Plug>QfLtoggle
<
------------------------------------------------------------------------------
                                                               *QfPreviousFile*
                                                                   *QfNextFile*
Scope: local                                                                 ~
Default: { and }                                                             ~

Jump to the next group of lines corresponding to a file.

------------------------------------------------------------------------------
                                                        *'qf_mapping_ack_style'*
Value: numeric                                                               ~
Default: 0                                                                   ~

Ack.vim-inspired mappings available only in location/quickfix windows:

    s - open entry in a new horizontal window
    v - open entry in a new vertical window
    t - open entry in a new tab
    o - open entry and come back
    O - open entry and close the location/quickfix window
    p - open entry in a preview window

Add the line below to your vimrc to enable this feature: >

    let g:qf_mapping_ack_style = 1
<
------------------------------------------------------------------------------
                                                            *'qf_window_bottom'*
Value: numeric                                                               ~
Default: 1                                                                   ~

Open the quickfix window at the bottom of the screen.

Add the line below to your vimrc to disable this feature: >

    let g:qf_window_bottom = 0
<
------------------------------------------------------------------------------
                                                    *'qf_loclist_window_bottom'*
Value: numeric                                                               ~
Default: 1                                                                   ~

Open location list windows at the bottom of the screen.

Add the line below to your vimrc to disable this feature: >

    let g:qf_loclist_window_bottom = 0
<
------------------------------------------------------------------------------
                                                               *'qf_statusline'*
Value: dictionary                                                            ~
Default: {}                                                                  ~

It is possible to define what comes before and after the default information
displayed in the |'statusline'|.

Example: >

    let g:qf_statusline = {}
    let g:qf_statusline.before = '%<\ '
    let g:qf_statusline.after = '\ %f%=%l\/%-6L\ \ \ \ \ '
<
------------------------------------------------------------------------------
                                                       *'qf_auto_open_quickfix'*
Value: numeric                                                               ~
Default: 1                                                                   ~

Open the quickfix window automatically if there are any errors.

Add the line below to your vimrc to disable this feature: >

    let g:qf_auto_open_quickfix = 0
<
------------------------------------------------------------------------------
                                                        *'qf_auto_open_loclist'*
Value: numeric                                                               ~
Default: 1                                                                   ~

Open the location window automatically if there are any locations.

Add the line below to your vimrc to disable this feature: >

    let g:qf_auto_open_loclist = 0
<
------------------------------------------------------------------------------
                                                            *'qf_window_height'*
Value: numeric                                                               ~
Default: 0                                                                   ~

Set the size of the quickfix or loclist window. Setting this to 0 means the
window will be automatically resized.

Example:

    let g:qf_auto_open_loclist = 0
<
==============================================================================
 4. USAGE                                                            *qf-usage*

The following commands are available when the location/quickfix window
is focused:

*:Keep*

    Keep only entries that contain the given argument, either in the
    filename or in the description. Note: the argument is not a regular
    expression pattern.

    Example: >

        :Keep model
        :Keep <C-r><C-f>
>
*:Reject*

    Reject all entries that contain the given argument in the filename or
    in the description. Note: the argument is not a regular expression
    pattern.

    Example: >

        :Reject build
        :Reject <C-r><C-w>
>
*:Restore*

    Restore the list to its original state.

*:Doline*

    Execute an Ex command on every line in the current list.
    Aliased to the built-in `:cdo` and `:ldo` when applicable.

    Example: >

        :Doline s/^/--
<
*:Dofile*

    Execute an Ex command on every file in the current list.
    Aliased to the built-in `:cfdo` and `:lfdo` when applicable.

    Example: >

        :Dofile norm @q
<
*:SaveList*

    Save the current quickfix/location list and associates it
    with a given name. If no name is supplied the last saved
    list is used.

    Example: >

        :SaveList curlist
<
*:SaveListAdd*

    Like |:SaveList|, but adds to an existing named list.

    Example: >

        :SaveListAdd curlist
<
*:LoadList*

    Replace the current quickfix/location list with one or more saved named
    lists. If no name is supplied, the last saved list is used.

    Example: >

        :LoadList curlist
<
*:LoadListAdd*

    Like |:LoadList|, but adds to an existing quickfix/location list.

    Example: >

        :LoadListAdd curlist
<
*:ListLists*

    List all currently saved lists.

    Example: >

        :ListLists
        curlist
        another_list
<
*:RemoveList*

    Remove given lists. With a bang all saved lists are removed.

NOTE: In most cases it is possible to only type a few characters to
disembiguate commands. Assuming you don't already have custom commands with
clashing names, you can shorten the commands above to:

    |:Keep| ....................................... :K
    |:Reject| ..................................... :Rej
    |:Restore| .................................... :Res
    |:Doline| ..................................... :Dol
    |:Dofile| ..................................... :Dof
    |:SaveList| ................................... :SaveList
    |:SaveListAdd| ................................ :SaveListA
    |:LoadList| ................................... :LoadList
    |:LoadListAdd| ................................ :LoadListA
    |:ListLists| .................................. :ListL
    |:RemoveList| ................................. :Rem

==============================================================================
 5. NAMED LISTS                                                *qf-named-lists*

While vim remembers the last ten quickfix/location lists and provides commands
to switch between them (|:colder|, |:lolder|, |:cnewer|, |:lnewer|), this doesn't
necessarily suffice and doesn't include changes made with |:Reject| et al.

So vim-qf provides commands to save quickfix and location lists for later reuse
and concatenation. This can be handy to compose a long list of matches to act
on with |:cdo|, |:ldo| and family.

These named lists share the same space, so a location list can be converted to
a quickfix list: >

    :SaveList current_loclist
    :cwindow
    :LoadList current_loclist
<
Concatenating multiple location lists to use as a quickfix list: >

    :SaveListAdd current_loclist

< in each location list you want to use, then >

    :cwindow
    :LoadList current_loclist
<
Composing a list of files to attach a license to: >

    :grep _GNU_SOURCE
    :Reject false_positives
    :SaveListAdd floss_files
    :grep POSIX_ME_HARDER
    :Reject false_positives
    :SaveListAdd floss_files

< and so on... >

    :cwindow
    :LoadList floss_files
    :cdo 0r /path/to/license
<
==============================================================================
 6. ACKNOWLEGEMENTS                                       *qf-acknowledgements*

The "Ack.vim-inspired mappings" are adapted from Ack.vim:

    - https://github.com/mileszs/ack.vim

|:Doline| and |:Dofile| are inspired by these online resources:

    - http://vimcasts.org/episodes/project-wide-find-and-replace/
    - https://github.com/nelstrom/vim-qargs
    - https://github.com/henrik/vim-qargs
    - http://stackoverflow.com/a/4793316/546861
    - http://stackoverflow.com/a/5686810/546861

|:Keep| and |:Reject| are adapted from the answers in this thread:

    - http://stackoverflow.com/q/15406138/546861

All the templates used to turn this multifarious collection of snippets into
a proper plugin come from Barry Arthur's Area 41 plugin:

    - https://github.com/dahu/Area-41

The named lists feature is the brainchild of Nelo-T. Wallus:

    - https://ntnn.de/

==============================================================================
 7. TODO                                                              *qf-todo*

    - Export more options?
    - Add a gifcast to the README?
    - Add titles to saved lists, e.g. to display in :ListLists?

==============================================================================
 8. DONE                                                              *qf-done*

    - Use <Plug> mappings.
    - Add proper attribution for a few features.
    - Write a proper help file.
    - Ask #vim's opinion.

 vim:tw=78:ts=8:ft=help:norl:
